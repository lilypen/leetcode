class Solution {
public:
    void solve(vector<vector<char>>& board) {
        if(board.size()==0) return;
        int row=board.size(),col=board[0].size();
        for(int j=0;j<col;j++)
        {
            if(board[0][j]=='O')
            {
                dfs(board,0,j,row,col);
            }
            if(board[row-1][j]=='O')
            {
                dfs(board,row-1,j,row,col);
            }
        }
        for(int i=1;i<row-1;i++)
        {
            if(board[i][0]=='O')
            {
                dfs(board,i,0,row,col);
            }
            if(board[i][col-1]=='O')
            {
                dfs(board,i,col-1,row,col);
            }
        }
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(board[i][j]=='O') board[i][j]='X';
                if(board[i][j]=='F') board[i][j]='O';
            }
        }
        return ;
        
    }
    void dfs(vector<vector<char>>& board,int i,int j,int row,int col)
    {
        if(board[i][j]=='O'){
			board[i][j]='F';
			if(i>1)
				dfs(board,i-1,j,row,col);
			if(j>1)
				dfs(board,i,j-1,row,col);
			if(i+1<row)
				dfs(board,i+1,j,row,col);
			if(j+1<col)
				dfs(board,i,j+1,row,col);
		}
        
    }
};
