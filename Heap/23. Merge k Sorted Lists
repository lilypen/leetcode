/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.size()==1) return lists[0];
        if(lists.size()==0) return NULL;
        int size=lists.size();
        vector<ListNode*> lists1,lists2;
        for(int i=0;i<size/2;i++)
        {
            lists1.push_back(lists[i]);
        }
        for(int i=size/2;i<size;i++)
        {
            lists2.push_back(lists[i]);
        }
        return mergeTwoLists(mergeKLists(lists1),mergeKLists(lists2));
        
    }
    ListNode* mergeTwoLists(ListNode* l1,ListNode* l2)
    {
        if(l1==NULL) return l2;
        if(l2==NULL) return l1;
        ListNode *cur1=l1,*cur2=l2,*head=new ListNode(0),*cur=head;
        while(cur1&&cur2)
        {
            if(cur1->val<cur2->val)
            {
                cur->next=cur1;
                cur1=cur1->next;
            }
            else
            {
                cur->next=cur2;
                cur2=cur2->next;
            }
            cur=cur->next;
        }
        if(cur1) cur->next=cur1;
        if(cur2) cur->next=cur2;
        return head->next;
    }
};
