first method:sort O(N lg N) running time + O(1) memory;
second method :priority_queue O(N lg K) running time + O(K) memory
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int> q;//默认大顶堆 同priority_queue<int,vector<int>,less<int> > q
        for(int num:nums)
        {
            q.push(num);
        }
        for(int i=0;i<k-1;i++)
        {
            q.pop();
        }
        return q.top();
    }
};
