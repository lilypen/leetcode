class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n=nums.size();
        if(n==0) return {};
        vector<int> res;
        priority_queue<pair<int,int>> pq;
        for(int i=0;i<n-k+1;i++)
        {
            if(pq.empty())
            {
                for(int j=0;j<k;j++)
                {
                    pq.push({nums[i+j],i+j});
                }
            }
            else pq.push({nums[i+k-1],i+k-1});
            while(pq.top().second<i||pq.top().second>i+k-1)
            {
                pq.pop();
            }
            res.push_back(pq.top().first);
        }
        return res;
        
    }
};
